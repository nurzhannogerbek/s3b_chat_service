AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    MemorySize: 3008
    Timeout: 900
Parameters:
    EnvironmentName:
        Type: String
    BackendDependenciesStackName:
        Type: String
        Default: BackendDependencies
Resources:
    GetChatRoomMessages:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}GetChatRoomMessages"
            CodeUri: src/aws_lambda_functions/get_chat_room_messages
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    CreateChatRoomMessage:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}CreateChatRoomMessage"
            CodeUri: src/aws_lambda_functions/create_chat_room_message
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    GetChannelsTypesAndChannels:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}GetChannelsTypesAndChannels"
            CodeUri: src/aws_lambda_functions/get_channels_types_and_channels
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    CreateChatRoom:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}CreateChatRoom"
            CodeUri: src/aws_lambda_functions/create_chat_room
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    AssignChatRoomOperator:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}AssignChatRoomOperator"
            CodeUri: src/aws_lambda_functions/assign_chat_room_operator
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    CloseChatRoom:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}CloseChatRoom"
            CodeUri: src/aws_lambda_functions/close_chat_room
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    UpdateMessageSendingStatus:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}UpdateMessageSendingStatus"
            CodeUri: src/aws_lambda_functions/update_message_sending_status
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
    GetNonAcceptedChatRooms:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}GetNonAcceptedChatRooms"
            CodeUri: src/aws_lambda_functions/get_non_accepted_chat_rooms
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    GetChatRoomInformation:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}GetChatRoomInformation"
            CodeUri: src/aws_lambda_functions/get_chat_room_information
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    GetAcceptedChatRooms:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}GetAcceptedChatRooms"
            CodeUri: src/aws_lambda_functions/get_accepted_chat_rooms
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    GetCompletedChatRooms:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}GetCompletedChatRooms"
            CodeUri: src/aws_lambda_functions/get_completed_chat_rooms
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    ActivateClosedChatRoom:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}ActivateClosedChatRoom"
            CodeUri: src/aws_lambda_functions/activate_closed_chat_room
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    UpdateMessageStatus:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}UpdateMessageStatus"
            CodeUri: src/aws_lambda_functions/update_message_status
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
    GetChannelOnlineOperators:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName:
                Fn::Sub: "${EnvironmentName}GetChannelOnlineOperators"
            CodeUri: src/aws_lambda_functions/get_channel_online_operators
            Handler: lambda_function.lambda_handler
            Runtime: python3.8
            Layers:
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Databases"
                - Fn::ImportValue:
                    Fn::Sub: "${BackendDependenciesStackName}:Utils"
Outputs:
    GetChatRoomMessages:
        Value:
            Ref: GetChatRoomMessages
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:GetChatRoomMessages"
    CreateChatRoomMessage:
        Value:
            Ref: CreateChatRoomMessage
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:CreateChatRoomMessage"
    GetChannelsTypesAndChannels:
        Value:
            Ref: GetChannelsTypesAndChannels
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:GetChannelsTypesAndChannels"
    CreateChatRoom:
        Value:
            Ref: CreateChatRoom
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:CreateChatRoom"
    AssignChatRoomOperator:
        Value:
            Ref: AssignChatRoomOperator
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:AssignChatRoomOperator"
    CloseChatRoom:
        Value:
            Ref: CloseChatRoom
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:CloseChatRoom"
    UpdateMessageSendingStatus:
        Value:
            Ref: UpdateMessageSendingStatus
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:UpdateMessageSendingStatus"
    GetNonAcceptedChatRooms:
        Value:
            Ref: GetNonAcceptedChatRooms
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:GetNonAcceptedChatRooms"
    GetChatRoomInformation:
        Value:
            Ref: GetChatRoomInformation
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:GetChatRoomInformation"
    GetAcceptedChatRooms:
        Value:
            Ref: GetAcceptedChatRooms
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:GetAcceptedChatRooms"
    GetCompletedChatRooms:
        Value:
            Ref: GetCompletedChatRooms
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:GetCompletedChatRooms"
    ActivateClosedChatRoom:
        Value:
            Ref: ActivateClosedChatRoom
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:ActivateClosedChatRoom"
    UpdateMessageStatus:
        Value:
            Ref: UpdateMessageStatus
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:UpdateMessageStatus"
    GetChannelOnlineOperators:
        Value:
            Ref: GetChannelOnlineOperators
        Export:
            Name:
                Fn::Sub: "${AWS::StackName}:GetChannelOnlineOperators"
